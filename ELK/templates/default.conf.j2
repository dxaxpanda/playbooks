server {
  listen 443 ssl;
  #listen [::]:443 ssl;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate /etc/ssl/nginx/server.crt;
  ssl_certificate_key /etc/ssl/nginx/server.key;
  ssl_dhparam /etc/ssl/nginx/dhparam.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # auth_basic "Please provide credentials.";
  # auth_basic_user_file "/usr/local/etc/nginx/auth/kibana.passwd";

      location ~ (/app/kibana/bundles/|/kibana4|/status|/plugins) { # kibana
        proxy_pass http://127.0.0.1:5601;
        proxy_http_version 1.1;
        auth_basic "Please provide credentials for kibana.";
        auth_basic_user_file "/usr/local/etc/nginx/auth/kibana.passwd";
          # proxy_set_header Host $host;
          # rewrite /app/kibana(.*)$ /$1 break;
      }

      location /elasticsearch {
        proxy_pass http://127.0.0.1:9200;
        proxy_http_version 1.1;
        auth_basic "Please provide credentials for elastic search.";
        auth_basic_user_file "/usr/local/etc/nginx/auth/elastic.passwd";
      }

  # modern configuration. tweak to your needs.
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  #ssl_stapling on;
  #ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

  # resolver <IP DNS resolver>;

  #....
}
