
---
- hosts: all
  become: true
  vars_files:
    - vars.yml

  tasks:

    - name: set hostnames
      hostname:
        name: masterdb-newyork.qwirk
      when: "'172.10.10.50' in inventory_hostname"
    - name: set hostnames
      hostname:
        name: sdb2-newyork.qwirk
      when: "'172.10.10.51' in inventory_hostname"

    - name: set hostnames
      hostname:
        name: masterdb-dallas.qwirk
      when: "'172.10.10.52' in inventory_hostname"
    - name: set hostnames
      hostname:
        name: sdb2-dallas.qwirk
      when: "'172.10.10.53' in inventory_hostname"
    - name: set hostnames
      hostname:
        name: masterdb-toronto.qwirk
      when: "'172.10.10.54' in inventory_hostname"






    - name: Add MariaDB repo
      template:
        src: yum.repos.d/mariadb.repo.j2
        dest: /etc/yum.repos.d/mariadb.repo
        owner: root
        group: root
        mode: 0644

    - name: Add EPEL repo
      yum:
        name: epel-release
        update_cache: yes
        state: present
    - name: install packages
      yum:
        name: "{{ item }}"
        state: latest
        enablerepo: epel
      with_items:
        - "{{ packages }}"

    - name: ensure mysql is running, enabled
      service:
        name: mariadb
        state: stopped
        enabled: true

    - name: create mysql directory
      file:
        path: "{{ item }}"
        state: directory
        owner: mysql
        group: mysql
        mode: 0755
      with_items:
        - "{{ mysql_dirs }}"

    - name: copy TLS PKI
      copy:
        src: "{{ item }}"
        dest: /etc/mysql/ssl/
      with_items:
        - "{{ TLS_PKI_FILES }}"

    - name: copy files to /etc/mysql/ssl
      shell: "cp /etc/mysql/ssl/certs/{{ item }}/* /etc/mysql/ssl"
      with_items:
        - ca
        - mariadb-server
        - mariadb-client

    - name: copy templates
      template:
        src: templates/mysql/master/.my.cnf.j2
        dest: /etc/my.cnf.d/my.cnf
      when: "'master' in group_names"

    - name: copy templates
      template:
        src: templates/mysql/master/.my.cnf.j2
        dest: /etc/my.cnf.d/my.cnf
      when: "'slaves' in group_names"


    - name: disable selinux
      selinux:
        policy: targeted
        state: permissive


    - name: start mariadb
      service:
        name: mariadb
        state: started

    - name: create replicator user
      mysql_user:
        name: root
        host: "{{ item }}"
        state: present
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ hosts }}"

    - name: create replicator user
      mysql_user:
        name: "{{ mysql_replication_user }}"
        host: "{{ item }}"
        password: "{{ mysql_replication_password }}"
        priv: "{{ mysql_replication_user_priv }}"
        state: present
      with_items:
        - "{{ hosts }}"
    - name: check if replication setup has been done
      stat:
        path: /etc/mysql/ansible.repl
      register: check_sql_path


### SEE https://gist.github.com/loranger/e2ddaa31e6a6faa0b956
    - name: check replication slave stats
      mysql_replication:
        mode: getslave
      ignore_errors: true
      when: inventory_hostname in groups['slaves']

    - name: get master replication status MASTER 1
      mysql_replication:
        mode: getmaster
        login_user: root
      register: replication

    - name: ensure slave is stopped
      mysql_replication:
        mode: stopslave

    - name: define master1 in master2
      mysql_replication:
        mode: changemaster
        #master_host: "{{ groups['master'][0] }}"
        master_host: 172.10.10.50
        #master_log_file: "{{ replication.File }}"
        #master_log_pos: "{{ replication.Position }}"
        master_user: "{{ mysql_replication_user }}"
        master_password: "{{ mysql_replication_password }}"
        master_ssl: 1
      when: "inventory_hostname == '172.10.10.52'"

    - name: define master2 in master1
      mysql_replication:
        mode: changemaster
        #master_host: "{{ groups['master'][1] }}"
        master_host: 172.10.10.52
        #master_log_file: "{{ replication2.File }}"
        #master_log_pos: "{{ replication2.Position }}"
        master_user: "{{ mysql_replication_user }}"
        master_password: "{{ mysql_replication_password }}"
        master_ssl: 1
      when: "inventory_hostname == '172.10.10.50'"

    - name: touch replication status file
      file:
        path: /etc/mysql/ansible.repl
        state: touch
      when: check_sql_path.stat.exists == false and inventory_hostname == '172.10.10.50'

    - name: touch replication status file
      file:
        path: /etc/mysql/ansible.repl
        state: touch
      when: check_sql_path.stat.exists == false and inventory_hostname == '172.10.10.52'


    - name: get master replication status  MASTER 2
      mysql_replication:
        mode: getmaster
        login_user: root
      register: replication2
      delegate_to: 172.10.10.52
      #when: slave|failed





 # 'localhost' needs to be the last item for idempotency, see
    # http://ansible.cc/docs/modules.html#mysql-user
    - name: update mysql root password for all root accounts
      mysql_user:
        name: root
        host: "{{ item }}"
        password: null
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: copy .my.cnf file with root password credentials
      template:
        src: templates/root/.my.cnf
        dest: /root/.my.cnf
        owner: root
        mode: 0600

    - name: ensure anonymous users are not in the database
      mysql_user:
        name: ''
        host: "{{ item }}"
        state: absent
      with_items:
        - localhost
        - "{{ inventory_hostname }}"

    - name: remove the test database
      mysql_db:
        name: test
        state: absent
